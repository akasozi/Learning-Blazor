

1. Create a new razor component
dotnet new razorcomponent -n Todo -o Pages

2. Add the @page directive on the Todo component

@page "/todo"

<h3>Todo</h3>

@code {

}

3. Add the Todo razor component to the navigation bar

  <li class="nav-item px-3">
       <NavLink class="nav-link" href="todo">
           <span class="oi oi-list-rich" aria-hidden="true"></span> Todo
       </NavLink>
   </li>

4. Create a TodoItem in the root of the project

    public class TodoItem
    {
        public string Title { get; set; }
        public bool IsDone { get; set; }
    }

5. Bind is list of TodoItems

    @page "/todo"

    <h3>Todo</h3>

    <ul>
        @foreach (var todo in todos)
        {
            <li>@todo.Title</li>
        }
    </ul>

    @code {
        private List<TodoItem> todos = new();
    }


6. Add Form Elements to create Todos

    @page "/todo"

    <h3>Todo</h3>

    <ul>
      @foreach (var todo in todos)
      {
          <li>@todo.Title</li>
      }
    </ul>

    <input placeholder="Something todo" />
    <button>Add todo</button>

    @code {
      private List<TodoItem> todos = new();
    }

7. Add an AddTodo() method to the Todo component and register the method usinf the @onclick attribute


        <input placeholder="Something todo" />
        <button @onclick="AddTodo">Add todo</button>

        @code {
        private List<TodoItem> todos = new();

        private void AddTodo()
        {
            // Todo: Add the todo
        }
        }
8. To get the title of the new TodoItem
      @code {
       private List<TodoItem> todos = new();
       private string newTodo;

       // ... code continues ...
       }

9. Modify the input element to bind the newTodo with the @bind attribute
   <input placeholder="Something todo" @bind="newTodo" />

10. Update the AddTodo to add items ti the todos

    @page "/todo"

    <h3>Todo</h3>

    <ul>
     @foreach (var todo in todos)
     {
         <li>@todo.Title</li>
     }
    </ul>

    <input placeholder="Something todo" @bind="newTodo" />
    <button @onclick="AddTodo">Add todo</button>

    @code {
     private List<TodoItem> todos = new();
     private string newTodo;

     private void AddTodo()
     {
         if (!string.IsNullOrWhiteSpace(newTodo))
         {
             todos.Add(new TodoItem { Title = newTodo });
             newTodo = string.Empty;
         }
     }
    }

11. The title element for each element can be made editable

        <ul>
            @foreach (var todo in todos)
            {
                <li>
                    <input type="checkbox" @bind="todo.IsDone" />
                    <input @bind="todo.Title" />
                </li>
            }
        </ul>

12. Update the <h3> header to show a count of the number of todo items that aren't complete (IsDone is false).

   <h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>        
